<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Luthadel</title><link>https://rudeigerc.dev/</link><description>Recent content on Luthadel</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><copyright>© 2020 Yuchen Cheng. This site is licensed under a Creative Commons Attribution 4.0 International license.</copyright><lastBuildDate>Mon, 27 Jul 2020 08:33:27 +0800</lastBuildDate><atom:link href="https://rudeigerc.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://rudeigerc.dev/about/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0800</pubDate><guid>https://rudeigerc.dev/about/</guid><description>Bio: Yuchen Cheng is currently a graduate student of School of Software at Shanghai Jiao Tong University, advised by Prof. Zhengwei Qi and Rui Ren. He received the B.Eng. degree in software engineering from Shanghai Jiao Tong University in 2019. His research interests include distributed computing and resource management.
Research Interests Distributed system: Distributed computing, resource management Education Shanghai Jiao Tong University Shanghai, China M.</description></item><item><title>Securing Key-Value Storages with SGX</title><link>https://rudeigerc.dev/posts/secured-kv/</link><pubDate>Mon, 27 Jul 2020 08:33:27 +0800</pubDate><guid>https://rudeigerc.dev/posts/secured-kv/</guid><description>引言 随着云计算的发展，键值对存储作为持久化的存储系统被广泛使用，如 in-memory 的 Memcached 和 Redis，以及基于 LSM-tree 的 LevelDB 和 RocksDB 等，但在云端这样一个不受信任的环境之</description></item><item><title>Naive Networking with Combine in Swift</title><link>https://rudeigerc.dev/posts/naive-networking-with-combine-in-swift/</link><pubDate>Sat, 28 Dec 2019 21:22:51 +0800</pubDate><guid>https://rudeigerc.dev/posts/naive-networking-with-combine-in-swift/</guid><description>Introduction Combine 和 SwiftUI 是苹果在 WWDC 2019 提出的两大新的开发框架。 The Combine framework provides a declarative Swift API for processing values over time. These values can represent many kinds of asynchronous events. Combine declares publishers to expose values that can change over time, and subscribers to receive those values from the publishers. Reactive Programming 在这里我</description></item><item><title>Cloud Native Infrastructure: Part 2 Monitoring</title><link>https://rudeigerc.dev/posts/cloud-native-infrastructure-monitoring/</link><pubDate>Mon, 27 May 2019 22:44:05 +0800</pubDate><guid>https://rudeigerc.dev/posts/cloud-native-infrastructure-monitoring/</guid><description>Introduction Prometheus Prometheus is an open-source systems monitoring and alerting toolkit.
Installation In docker-compose.yml:
services:prometheus:image:prom/prometheusrestart:alwaysvolumes:- ./prometheus.yml:/etc/prometheus/prometheus.yml- ./prometheus:/prometheusports:- 9090:9090user:rootPrometheus provides a UI at :9090 by default.
Node Exporter Node Exporter is designed ad a Prometheus exporter for hardware and OS metrics exposed by *NIX kernels.
According to the documentation, it&amp;rsquo;s not recommended to deploy it as a Docker container because it requires access to the host system, so you could just download the binary release version.</description></item><item><title>Cloud Native Infrastructure: Part 1 Service Discovery</title><link>https://rudeigerc.dev/posts/cloud-native-infrastructure-service-discovery/</link><pubDate>Mon, 27 May 2019 22:23:43 +0800</pubDate><guid>https://rudeigerc.dev/posts/cloud-native-infrastructure-service-discovery/</guid><description>Introduction Service discovery components maintain a list of service instances that are available for work within a microservice domain, which is the most important part in microservice architecture. The advantage of service discovery components is that clients do not need to know the exact position of services, what they have are just the registered name of services if they want to call or use them.
Usually, a microservice will register itself to the center of service discovery components when it was started successfully, including necessary parameters such as the unique name of service, IP address and the port bind.</description></item></channel></rss>